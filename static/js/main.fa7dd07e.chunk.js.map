{"version":3,"sources":["components/card/card.js","components/card_list/card_list.jsx","components/search_box/search_box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","el","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAMaA,EAAO,SAACC,GACpB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,GAAGC,GAAnC,4BAEJ,6BAAKL,EAAMI,GAAGE,OACd,4BAAIN,EAAMI,GAAGG,YCNHC,G,MAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GAAD,OAEnB,aADA,CACC,EAAD,CAAkBA,GAAIA,GAAXA,EAAGC,WCHLM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxC,OACC,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCEG,G,wDAvCd,aAAe,IAAD,8BACb,gBAeDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IAJD,E,qDAUd,WAAqB,IAAD,OACnBI,MAAM,6CACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WACC,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACxCA,EAAGE,KAAKyB,cAAcC,SAASb,EAAYY,kBAG5C,OACC,sBAAK9B,UAAU,MAAf,UACC,mDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlCNI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCKdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.fa7dd07e.chunk.js","sourcesContent":["/** @format */\n\nimport \"./card.css\";\n\nimport React from \"react\";\n\nexport const Card = (props) => {\n\treturn (\n\t\t<div className=\"card_container\">\n\t\t\t<img\n\t\t\t\talt=\"monster\"\n\t\t\t\tsrc={`https://robohash.org/${props.el.id}?set=set2&size=180x180`}\n\t\t\t/>\n\t\t\t<h2>{props.el.name}</h2>\n\t\t\t<p>{props.el.email}</p>\n\t\t</div>\n\t);\n};\n","/** @format */\n\nimport React from \"react\";\n\nimport { Card } from \"../card/card\";\n\nimport \"./card_list.css\";\n\nexport const CardList = (props) => {\n\treturn (\n\t\t<div className=\"card_list\">\n\t\t\t{props.monsters.map((el) => (\n\t\t\t\t// <h1 key={el.id} >{el.name}</h1>\n\t\t\t\t<Card key={el.id} el={el} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","/**\n * Functional component that is Reusable - this will be reduce duplicate codes\n *\n * @format\n */\n\nimport React from \"react\";\n\nimport \"./search_box.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName=\"search\"\n\t\t\ttype=\"search\"\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card_list/card_list\";\nimport { SearchBox } from \"./components/search_box/search_box\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\n\t\t// this.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"http://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((el) =>\n\t\t\tel.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1> Monster Rolodex </h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"search monsters\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\n * /* eslint-disable no-eval\n *\n * @format\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}